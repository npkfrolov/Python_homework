CREATE TABLE sophia.desyatiny (
numb SERIAL PRIMARY KEY,
name character varying
);
COMMENT ON TABLE  sophia.desyatiny IS 'список десятин - крупных территориальных подразделений Новгородской епархии';

INSERT INTO sophia.desyatiny (name) VALUES ('Бежецкая'),
('Деревская'),
('Курская'),
('Русская'),
('Ржевская'),
('Шелонская'),
('Водская'),
('Залесская и Тесовская'),
('Ореховская'),
('Нагорская'),
('Ладожская и Поволховская'),
('Коловая'),
('Заонежская'),
('Корельская');

CREATE TABLE sophia.devotions (
fid SERIAL PRIMARY KEY,
name character varying UNIQUE
);
COMMENT ON TABLE  sophia.devotions IS 'список посвящений храмов, нормализован при составлении указателя в книге';

INSERT INTO sophia.devotions (name)
SELECT DISTINCT substring(test.paragraph from 1 for
				          (SELECT position( '*' in test.paragraph))) a
                 FROM sophia.test  ORDER BY a;
UPDATE sophia.devotions SET name =
	substring(devotions.name from 1 for char_length(devotions.name)-1) WHERE char_length(devotions.name)>0;
-- удаляем знак-маркер из набора


-- 756 записей
CREATE TABLE sophia.corporations (
fid SERIAL PRIMARY KEY,
raw_toponame character varying,
type character varying,
raw_folio character varying ARRAY,
source character varying
);
COMMENT ON COLUMN sophia.corporations.raw_toponame IS 'часть названия, характеризующая топографию';
COMMENT ON COLUMN sophia.corporations.raw_folio IS 'лист рукописи - задан в виде массива, потому что не исключен переход названия в тексте с одного листа на другой или с recto на verso или наоборот';
COMMENT ON COLUMN sophia.corporations.type IS 'церковь или монастырь - и те, и другие играли роль плательщиков, основных акторов источника, поэтому объединены в одну таблицу. Но в указателе монастыри не были нормализованы по тому же шаблону, что и церкви, поэтому пришлось дополнительно нормализовать их с помощью расстояния Левенштейна';
COMMENT ON COLUMN sophia.corporations.source IS 'название по географическому указателю';
COMMENT ON TABLE  sophia.corporations IS 'церкви/монастыри из географического указателя. Приставка raw в названии столбцов помечает столбцы, куда вводятся распарсенные данные из макета с помощью функции search_word(). Приставка ctrl - в столбцах, созданных для контроля корректности разбора путем подгрузки названия - одновременно с айдишником сопоставленного объекта';

-- добавление в текст меток на основе regexp для разбора по отдельным полям
UPDATE sophia.corporations SET source = regexp_replace
( (SELECT corporations.source), '(?<!,)\s(?=\d)' , ' §'
);

-- парсинг подстроки от начала строки до метки выхода (1 шаг) с последующим удалением от начала строки до метки вхождения - если таковая имеется(2 шаг). Альтернативный вариант, основанный на поиске длины необходимой подстроки по расстоянию между метками входа и выхода не сработал в связи с тем, что в ряде случаев метка входа отсутсвует
UPDATE sophia.corporations SET raw_toponame=
	substring(corporations.source from 1
			for (SELECT position('§' in corporations.source)
				)-2);
UPDATE sophia.corporations SET raw_toponame = regexp_replace
( (SELECT corporations.raw_toponame), '.+\*' , ''
);

-- парсинг номеров листов рукописи, на которых упомянуто соответствующее название, с устранением дополнительных сведений в скобках
UPDATE sophia.corporations SET source=
regexp_replace(corporations.source, '\s\(.+\),', ',');
UPDATE sophia.corporations SET source=
regexp_replace(corporations.source, '\s\(.+\)$', '');
UPDATE sophia.corporations SET raw_folio=
	regexp_split_to_array(substring(corporations.source from
			  (SELECT position('§' in corporations.source)+1
				)), ',');

-- 758 записей
CREATE TABLE sophia.altars (
fid SERIAL PRIMARY KEY,
raw_holyname character varying,
ctrl_holyname character varying,
devotion_id integer,
corporation_id integer,
source character varying
);
COMMENT ON COLUMN sophia.altars.raw_holyname IS 'посвящение храма из указателя';
COMMENT ON TABLE  sophia.altars IS 'поскольку один храм мог иметь более одного престола, пришлось создать отдельную таблицу для престолов';

ALTER TABLE sophia.altars ADD FOREIGN KEY (devotion_id) REFERENCES sophia.devotions ON DELETE RESTRICT;
ALTER TABLE sophia.altars ADD FOREIGN KEY (corporation_id) REFERENCES sophia.corporations ON DELETE RESTRICT;
